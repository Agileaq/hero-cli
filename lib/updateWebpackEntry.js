var SingleEntryPlugin = require('webpack/lib/SingleEntryPlugin');
var path = require('path');
var paths = require('../config/paths');
var ensureSlash = require('./ensureSlash');
var getComponentsData = require('../lib/getComponentsData');

var entryName, subPath, targetFilePath;
var entryConfig;

function updateEntryFile(compiler, filePath, isDelete) {

    var needRebuild = true;

    var plugins = compiler.options.plugins;
    var entries = compiler.options.entry;

    if (!isDelete) {
        entryConfig = getComponentsData(filePath);
    }
    // File Removed or File is Not a Entry
    if (isDelete || !entryConfig) {
        Object.keys(entries).forEach(function (key) {
            if (entries[key] === filePath) {
                delete compiler.options.entry[key];
            }
        });

        plugins.forEach(function (plugin, idx) {
            if (plugin
            && plugin.options
            && plugin.options.template
            && plugin.options.template.indexOf(filePath) !== -1) {
                plugins.splice(idx, 1);
            }
        });

        return true;
    }

    // console.log('entryConfig = ', filePath, entryConfig);
    // console.log('======================');
    // Entry File Update or Set a file as Entry
    var existsPlugin = plugins.find(function (plugin) {
        return (plugin
          && plugin.options
          && plugin.options.template
          && plugin.options.template.indexOf(filePath) !== -1);
    });

    var existsEntryKey = Object.keys(entries).find(function (key) {
        return (entries[key] === filePath);
    });

    subPath = filePath.replace(ensureSlash(path.join(paths.appSrc), true), '');
    entryName = plugins.length + '-' + new Date().getTime + '' + (subPath.match(/(.*)\/(.*)\.js$/)[2]);
    targetFilePath = subPath.match(/(.*)\.js$/)[1];

    // compiler.apply(new SingleEntryPlugin(process.cwd(), filePath, entryName));
    // if (!existsEntryKey) {
    //     entries[entryName] = filePath;
    // }
    //
    // var pluginOptions = {
    //     'template': '!!html!/home/nb073/workspaces/hero-apps/hero-cli/config/entryTemplate.html',
    //     'filename': targetFilePath,
    //     'hash': false,
    //     'inject': 'head',
    //     'compile': true,
    //     'favicon': false,
    //     'minify': {
    //         'removeComments': true,
    //         'useShortDoctype': true,
    //         'html5': true,
    //         'includeAutoGeneratedTags': true,
    //         'ignoreCustomComments': [{}],
    //         'ignoreCustomFragments': [{}, {}]
    //     },
    //     'cache': true,
    //     'showErrors': true,
    //     'chunks': ['3-e2'],
    //     'excludeChunks': [],
    //     'title': entryName.toUpperCase(),
    //     'xhtml': false,
    //     'url': '../templates/login.html'
    // };
    //
    // pluginOptions = Object.assign(pluginOptions, entryConfig);
    // if (targetPlugin) {
    // }
    //
    // console.log(JSON.stringify(compiler.options));
    // console.log('isEntry=' + isEntry, targetPlugin);
    // Is Entry while Not Exists, then ADD
    return true;
}

module.exports = updateEntryFile;
